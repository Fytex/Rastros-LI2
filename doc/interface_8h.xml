<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="interface_8h" kind="file" language="C++">
    <compoundname>interface.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes refid="state_8h" local="yes">../data/state.h</includes>
    <includedby refid="main_8c" local="yes">projeto/main.c</includedby>
    <incdepgraph>
      <node id="51">
        <label>projeto/interface/interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
      </node>
      <node id="53">
        <label>../data/state.h</label>
        <link refid="state_8h"/>
      </node>
      <node id="52">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="interface_8h_1a6821bafc3c88dfb2e433a095df9940c6" prot="public" static="no">
        <name>BUF_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tamanho do buffer </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="14" column="9" bodyfile="projeto/interface/interface.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="interface_8h_1a1ea2d736a2aaee6d23a2182e38c10540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void interpreter</definition>
        <argsstring>(State *state)</argsstring>
        <name>interpreter</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Esta função interage com o terminal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O vencedor, ou se deu algum erro (caso 0) </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="21" column="1" bodyfile="projeto/interface/interface.c" bodystart="103" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1af0e8e5346802ba4161c023d8a3da403d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clear_terminal</definition>
        <argsstring>()</argsstring>
        <name>clear_terminal</name>
        <briefdescription>
<para>Limpa a janela do terminal. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="26" column="1" bodyfile="projeto/interface/interface.c" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a83c562733a5753bc24b3891c17cd1e18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void clear_stdin_buffer</definition>
        <argsstring>()</argsstring>
        <name>clear_stdin_buffer</name>
        <briefdescription>
<para>Limpa o stdin. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="31" column="1" bodyfile="projeto/interface/interface.c" bodystart="41" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a06b0a439cf89007a6077a72bc03e4a52" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void display_in_terminal</definition>
        <argsstring>(const State *const state, void(*const func)())</argsstring>
        <name>display_in_terminal</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *const</type>
          <declname>state</declname>
        </param>
        <param>
          <type>void(*)()</type>
          <declname>func</declname>
        </param>
        <briefdescription>
<para>Mostra algo no terminal. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>Função a ser executada no terminal </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="38" column="1" bodyfile="projeto/interface/interface.c" bodystart="83" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1adb3017ab58a465c68e608200a4c206a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void print_last_info</definition>
        <argsstring>(const State *const state)</argsstring>
        <name>print_last_info</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *const</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Mostra a última informação no ecrã </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="44" column="1" bodyfile="projeto/interface/interface.c" bodystart="69" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a835757b518be097d6d2da74f22131d6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void help_terminal</definition>
        <argsstring>()</argsstring>
        <name>help_terminal</name>
        <briefdescription>
<para>Mostra a ajuda no ecrã </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="49" column="1" bodyfile="projeto/interface/interface.c" bodystart="50" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="interface_8h_1a5226fbaebab0cf2ef3e2e73740e857a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void lower_string</definition>
        <argsstring>(char *s)</argsstring>
        <name>lower_string</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Converte uma letra maiúscula e em minúscula. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>s</parametername>
</parameternamelist>
<parameterdescription>
<para>Letra a converter em minúscula </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="projeto/interface/interface.h" line="55" column="1" bodyfile="projeto/interface/interface.c" bodystart="17" bodyend="19"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição da função que comunica com o terminal </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>RASTROS_LI2_INTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RASTROS_LI2_INTERFACE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../data/state.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="14" refid="interface_8h_1a6821bafc3c88dfb2e433a095df9940c6" refkind="member"><highlight class="preprocessor">#define<sp/>BUF_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a1ea2d736a2aaee6d23a2182e38c10540" kindref="member">interpreter</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1af0e8e5346802ba4161c023d8a3da403d" kindref="member">clear_terminal</ref>();</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a83c562733a5753bc24b3891c17cd1e18" kindref="member">clear_stdin_buffer</ref>();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a06b0a439cf89007a6077a72bc03e4a52" kindref="member">display_in_terminal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>func)());</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1adb3017ab58a465c68e608200a4c206a1" kindref="member">print_last_info</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>state);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a835757b518be097d6d2da74f22131d6b" kindref="member">help_terminal</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8h_1a5226fbaebab0cf2ef3e2e73740e857a9" kindref="member">lower_string</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>s);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//RASTROS_LI2_INTERFACE_H</highlight></codeline>
    </programlisting>
    <location file="projeto/interface/interface.h"/>
  </compounddef>
</doxygen>
