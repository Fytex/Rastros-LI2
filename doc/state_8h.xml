<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="state_8h" kind="file" language="C++">
    <compoundname>state.h</compoundname>
    <includedby refid="file_8c" local="yes">data/file.c</includedby>
    <includedby refid="board_8h" local="yes">interface/board.h</includedby>
    <includedby refid="linked_8h" local="yes">linked_lists/linked.h</includedby>
    <includedby refid="file_8h" local="yes">data/file.h</includedby>
    <includedby refid="state_8c" local="yes">data/state.c</includedby>
    <includedby refid="board_8c" local="yes">interface/board.c</includedby>
    <includedby refid="interface_8c" local="yes">interface/interface.c</includedby>
    <includedby refid="game_8h" local="yes">logic/game.h</includedby>
    <includedby refid="interface_8h" local="yes">interface/interface.h</includedby>
    <includedby refid="game_8c" local="yes">logic/game.c</includedby>
    <includedby refid="main_8c" local="yes">main.c</includedby>
    <invincdepgraph>
      <node id="30">
        <label>logic/game.h</label>
        <link refid="game_8h"/>
      </node>
      <node id="26">
        <label>data/state.h</label>
        <link refid="state_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="27">
        <label>interface/board.h</label>
        <link refid="board_8h"/>
      </node>
      <node id="28">
        <label>linked_lists/linked.h</label>
        <link refid="linked_8h"/>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="31">
        <label>interface/interface.h</label>
        <link refid="interface_8h"/>
      </node>
      <node id="29">
        <label>data/file.h</label>
        <link refid="file_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structPosition" prot="public">Position</innerclass>
    <innerclass refid="structMove" prot="public">Move</innerclass>
    <innerclass refid="structState" prot="public">State</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" prot="public" static="no">
        <name>Space</name>
        <enumvalue id="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8ae885c31e41fc9fcb8ac14496dc4346df" prot="public">
          <name>Blank</name>
          <initializer>= &apos;.&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8ac1e9bce8242f443c54c7405223d616cd" prot="public">
          <name>Black</name>
          <initializer>= &apos;#&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8ab548046646b36c12aa6ba841de500094" prot="public">
          <name>White</name>
          <initializer>= &apos;*&apos;</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Tipo de espaço no tabuleiro. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="12" column="1" bodyfile="data/state.h" bodystart="12" bodyend="16"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="state_8h_1a56a7a8f227c1cea3009cfd9997db57f1" prot="public" static="no">
        <type><ref refid="structMove" kindref="compound">Move</ref></type>
        <definition>typedef Move Moves[32]</definition>
        <argsstring>[32]</argsstring>
        <name>Moves</name>
        <briefdescription>
<para>Tipo de dados para as jogadas. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="42" column="1" bodyfile="data/state.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="state_8h_1ad46554c100e50ddc3e0bb288f010b0c1" prot="public" static="no" mutable="no">
        <type>const <ref refid="structPosition" kindref="compound">Position</ref></type>
        <definition>const Position BEGIN_POS</definition>
        <argsstring></argsstring>
        <name>BEGIN_POS</name>
        <briefdescription>
<para>Posição inicial no tabuleiro. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="29" column="1" bodyfile="data/state.c" bodystart="4" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="state_8h_1a8f908f2df8056cc97a448282382fd540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int swap_players</definition>
        <argsstring>(State *state)</argsstring>
        <name>swap_players</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Troca o jogador a jogar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O próximo jogador a jogar </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="60" column="1" bodyfile="data/state.c" bodystart="101" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a22e343ddcfb0725f681ce545cb3c6548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int get_current_player</definition>
        <argsstring>(const State *state)</argsstring>
        <name>get_current_player</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Obtém o jogador atual. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O jogador atual </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="67" column="1" bodyfile="data/state.c" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1ad3485fbb9ac9fab7fb2c0887442cd4d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_move_count</definition>
        <argsstring>(const State *state)</argsstring>
        <name>get_move_count</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Obtém o número de jogadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O número de jogadas </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="74" column="1" bodyfile="data/state.c" bodystart="56" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1ad1c74abd11d33ea2dd874f499cfb0667" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structPosition" kindref="compound">Position</ref></type>
        <definition>Position get_last_play</definition>
        <argsstring>(const State *state)</argsstring>
        <name>get_last_play</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Obtém a última jogada realizada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A última jogada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="81" column="1" bodyfile="data/state.c" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a8747aeb99529569b0fa1b1cb9f9fe346" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structMove" kindref="compound">Move</ref></type>
        <definition>Move get_move</definition>
        <argsstring>(const State *state, int idx)</argsstring>
        <name>get_move</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Obtém uma certa jogada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Número da jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A jogada para esse dado valor </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="89" column="1" bodyfile="data/state.c" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a9af3e6eb7aa64afbb564251578579fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" kindref="member">Space</ref></type>
        <definition>Space get_position_space</definition>
        <argsstring>(const State *state, Position pos)</argsstring>
        <name>get_position_space</name>
        <param>
          <type>const <ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Obtém o tipo de espaço do tabuleiro para uma dada coordenada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>O tipo de espaço da coordenada </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="97" column="1" bodyfile="data/state.c" bodystart="74" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a54484320c5ebf53280f267fc90421b69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edit_position_space</definition>
        <argsstring>(State *state, Position pos, Space space)</argsstring>
        <name>edit_position_space</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <param>
          <type><ref refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" kindref="member">Space</ref></type>
          <declname>space</declname>
        </param>
        <briefdescription>
<para>Altera o tipo de espaço numa dada coordenada do tabuleiro. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>space</parametername>
</parameternamelist>
<parameterdescription>
<para>Tipo de espaço </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="105" column="1" bodyfile="data/state.c" bodystart="83" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a916544e632eb481b193022e4ba387e4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edit_current_player</definition>
        <argsstring>(State *state, unsigned int player)</argsstring>
        <name>edit_current_player</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Altera o jogador a jogar. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogador para o qual altera </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="112" column="1" bodyfile="data/state.c" bodystart="92" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1aad9dc5f36b2d4fb3feba1f250d1680cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void append_move</definition>
        <argsstring>(State *state, Move move)</argsstring>
        <name>append_move</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="structMove" kindref="compound">Move</ref></type>
          <declname>move</declname>
        </param>
        <briefdescription>
<para>Adiciona uma jogada no array do estado com a lista de jogadas realizadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>move</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogada a adicionar </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="119" column="1" bodyfile="data/state.c" bodystart="117" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1ae597828ee4e1694789bbc85af75df1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edit_last_play</definition>
        <argsstring>(State *state, Position pos)</argsstring>
        <name>edit_last_play</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type><ref refid="structPosition" kindref="compound">Position</ref></type>
          <declname>pos</declname>
        </param>
        <briefdescription>
<para>Altera a coordenada da última jogada realizada. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenadas da última jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="126" column="1" bodyfile="data/state.c" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a1079c12d44377b654024bd5961fcaa21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edit_move_count</definition>
        <argsstring>(State *state, int count)</argsstring>
        <name>edit_move_count</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Altera o contador do número de jogadas realizadas. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Número de jogadas realizadas </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="133" column="1" bodyfile="data/state.c" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a61b82f0b611dd301bed2dba194f64424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void edit_move</definition>
        <argsstring>(State *state, int idx, Move move)</argsstring>
        <name>edit_move</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <param>
          <type><ref refid="structMove" kindref="compound">Move</ref></type>
          <declname>move</declname>
        </param>
        <briefdescription>
<para>Altera a jogada na posição indicada do array de jogadas do estado. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>Posição a alterar no array de jogadas </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>move</parametername>
</parameternamelist>
<parameterdescription>
<para>Jogada </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="141" column="1" bodyfile="data/state.c" bodystart="38" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="state_8h_1a94e97019246bbb8156c79b8b0579b2a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void set_default_state</definition>
        <argsstring>(State *state)</argsstring>
        <name>set_default_state</name>
        <param>
          <type><ref refid="structState" kindref="compound">State</ref> *</type>
          <declname>state</declname>
        </param>
        <briefdescription>
<para>Altera o estado do jogo para o estado inicial. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>state</parametername>
</parameternamelist>
<parameterdescription>
<para>Apontador para o estado </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="data/state.h" line="147" column="1" bodyfile="data/state.c" bodystart="129" bodyend="142"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Definição do estado e das funções que o manipulam </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>RASTROS_LI2_STATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RASTROS_LI2_STATE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>Blank<sp/>=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Black<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>White<sp/>=<sp/></highlight><highlight class="charliteral">&apos;*&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal">}<sp/><ref refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" kindref="member">Space</ref>;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="structPosition" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>column;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/><ref refid="structPosition" kindref="compound">Position</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/><ref refid="state_8h_1ad46554c100e50ddc3e0bb288f010b0c1" kindref="member">BEGIN_POS</ref>;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="structMove" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>player1;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>player2;</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="structMove" kindref="compound">Move</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="state_8h_1a56a7a8f227c1cea3009cfd9997db57f1" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structMove" kindref="compound">Move</ref><sp/><ref refid="state_8h_1a56a7a8f227c1cea3009cfd9997db57f1" kindref="member">Moves</ref>[32];</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structState" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" kindref="member">Space</ref><sp/>board[8][8];</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>last_play;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="state_8h_1a56a7a8f227c1cea3009cfd9997db57f1" kindref="member">Moves</ref><sp/>moves;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>move_count;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_player;</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><ref refid="structState" kindref="compound">State</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a8f908f2df8056cc97a448282382fd540" kindref="member">swap_players</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a22e343ddcfb0725f681ce545cb3c6548" kindref="member">get_current_player</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="state_8h_1ad3485fbb9ac9fab7fb2c0887442cd4d5" kindref="member">get_move_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><ref refid="structPosition" kindref="compound">Position</ref><sp/><ref refid="state_8h_1ad1c74abd11d33ea2dd874f499cfb0667" kindref="member">get_last_play</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><ref refid="structMove" kindref="compound">Move</ref><sp/><ref refid="state_8h_1a8747aeb99529569b0fa1b1cb9f9fe346" kindref="member">get_move</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><ref refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" kindref="member">Space</ref><sp/><ref refid="state_8h_1a9af3e6eb7aa64afbb564251578579fc5" kindref="member">get_position_space</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>pos);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a54484320c5ebf53280f267fc90421b69" kindref="member">edit_position_space</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>pos,<sp/><ref refid="state_8h_1ab11a1dda34491acff014ddfc9e6bafb8" kindref="member">Space</ref><sp/>space);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a916544e632eb481b193022e4ba387e4d" kindref="member">edit_current_player</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1aad9dc5f36b2d4fb3feba1f250d1680cc" kindref="member">append_move</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/><ref refid="structMove" kindref="compound">Move</ref><sp/>move);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1ae597828ee4e1694789bbc85af75df1b9" kindref="member">edit_last_play</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/><ref refid="structPosition" kindref="compound">Position</ref><sp/>pos);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a1079c12d44377b654024bd5961fcaa21" kindref="member">edit_move_count</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>count);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a61b82f0b611dd301bed2dba194f64424" kindref="member">edit_move</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="structMove" kindref="compound">Move</ref><sp/>move);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="state_8h_1a94e97019246bbb8156c79b8b0579b2a6" kindref="member">set_default_state</ref>(<ref refid="structState" kindref="compound">State</ref>*<sp/>state);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//RASTROS_LI2_STATE_H</highlight></codeline>
    </programlisting>
    <location file="data/state.h"/>
  </compounddef>
</doxygen>
